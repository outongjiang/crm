package person.otj.crm.workbench.mapper;
import person.otj.crm.workbench.model.Activities;
import java.util.List;
import java.util.Map;
public interface ActivitiesMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Fri Sep 23 10:55:57 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Fri Sep 23 10:55:57 CST 2022
     */
    int insertACtivity(Activities record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Fri Sep 23 10:55:57 CST 2022
     */
    int insertSelective(Activities record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Fri Sep 23 10:55:57 CST 2022
     */
    Activities selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Fri Sep 23 10:55:57 CST 2022
     */
    int updateByPrimaryKeySelective(Activities record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Fri Sep 23 10:55:57 CST 2022
     */
    int updateByPrimaryKey(Activities record);
    /*
        根据条件查询市场活动列表
    */
    List<Activities> selectActivityByConditionForPage(Map<String,Object>map);
/*
        根据条件查询市场活动的总条数
    */
    int selectCountOfActivityByCondition(Map<String,Object>map);
    int deleteActivityByIds(String ids[]);
    Activities selectActivityById(String id);
    List<Activities>selectActivityAll();
    List<Activities>selectActivityByIds(String ids[]);
    int insertActivityList(List<Activities>activities);
    //为clueDetail页面查询市场活动 根据clueId
    List<Activities>selectActivityForDetailByClueId(String clueId);
    //根据线索ID clueId和市场活动名称 name查询市场活动 为detail页面
    List<Activities>selectActivityForDetailByNameClueId(Map<String,Object>map);

    List<Activities>selectActivityForDetailByIds(String ids[]);

    //根据线索ID clueId和市场活动名称 name查询市场活动 为convert页面
    List<Activities>selectActivityForConvertByNameClueId(Map<String,Object>map);

    //根据市场活动名称模糊查询
    List<Activities>selectActivityForCustomerDetailByName(String activityName);


    //根据联系人与市场活动关系查询 市场活动集合
    List<Activities>selectActivityListForContactDetailByContactId(String id);


    List<Activities> selectActivityForDetailByNameContactId(Map<String, Object> map);
}